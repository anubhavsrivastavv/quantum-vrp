Q_Dict = {('x001', 'x001'): -1970, ('x001', 'x002'): 4000, ('x001', 'x003'): 4000, ('x001', 'x010'): -2000, ('x001', 'x012'): -2000, ('x001', 'x021'): 6000, ('x001', 'x023'): 0, ('x001', 'x030'): 0, ('x002', 'x001'): 4000, ('x002', 'x002'): -1960, ('x002', 'x003'): 4000, ('x002', 'x010'): 0, ('x002', 'x012'): 6000, ('x002', 'x021'): -2000, ('x002', 'x023'): -2000, ('x002', 'x030'): 0, ('x003', 'x001'): 4000, ('x003', 'x002'): 4000, ('x003', 'x003'): -1990, ('x003', 'x010'): 0, ('x003', 'x012'): 0, ('x003', 'x021'): 0, ('x003', 'x023'): 6000, ('x003', 'x030'): -2000, ('x010', 'x001'): -2000, ('x010', 'x002'): -2000, ('x010', 'x003'): -2000, ('x010', 'x010'): 2060, ('x010', 'x012'): 2000, ('x010', 'x021'): 0, ('x010', 'x023'): 0, ('x010', 'x030'): 2000, ('x012', 'x001'): 0, ('x012', 'x002'): 6000, ('x012', 'x003'): 0, ('x012', 'x010'): 2000, ('x012', 'x012'): -970, ('x012', 'x021'): -2000, ('x012', 'x023'): -2000, ('x012', 'x030'): 0, ('x021', 'x001'): 6000, ('x021', 'x002'): 0, ('x021', 'x003'): 0, ('x021', 'x010'): -2000, ('x021', 'x012'): -2000, ('x021', 'x021'): -976, ('x021', 'x023'): 2000, ('x021', 'x030'): 0, ('x023', 'x001'): 0, ('x023', 'x002'): 0, ('x023', 'x003'): 6000, ('x023', 'x010'): 0, ('x023', 'x012'): 0, ('x023', 'x021'): 2000, ('x023', 'x023'): -970, ('x023', 'x030'): -2000, ('x030', 'x001'): -2000, ('x030', 'x002'): -2000, ('x030', 'x003'): -2000, ('x030', 'x010'): 2000, ('x030', 'x012'): 0, ('x030', 'x021'): 0, ('x030', 'x023'): 0, ('x030', 'x030'): 2010, ('x001', 'x101'): 2000, ('x001', 'x102'): 0, ('x001', 'x103'): 0, ('x001', 'x110'): 0, ('x001', 'x112'): 0, ('x001', 'x121'): 2000, ('x001', 'x123'): 0, ('x001', 'x130'): 0, ('x002', 'x101'): 0, ('x002', 'x102'): 2000, ('x002', 'x103'): 0, ('x002', 'x110'): 0, ('x002', 'x112'): 2000, ('x002', 'x121'): 0, ('x002', 'x123'): 0, ('x002', 'x130'): 0, ('x003', 'x101'): 0, ('x003', 'x102'): 0, ('x003', 'x103'): 2000, ('x003', 'x110'): 0, ('x003', 'x112'): 0, ('x003', 'x121'): 0, ('x003', 'x123'): 2000, ('x003', 'x130'): 0, ('x010', 'x101'): 0, ('x010', 'x102'): 0, ('x010', 'x103'): 0, ('x010', 'x110'): 0, ('x010', 'x112'): 0, ('x010', 'x121'): 0, ('x010', 'x123'): 0, ('x010', 'x130'): 0, ('x012', 'x101'): 0, ('x012', 'x102'): 2000, ('x012', 'x103'): 0, ('x012', 'x110'): 0, ('x012', 'x112'): 2000, ('x012', 'x121'): 0, ('x012', 'x123'): 0, ('x012', 'x130'): 0, ('x021', 'x101'): 2000, ('x021', 'x102'): 0, ('x021', 'x103'): 0, ('x021', 'x110'): 0, ('x021', 'x112'): 0, ('x021', 'x121'): 2000, ('x021', 'x123'): 0, ('x021', 'x130'): 0, ('x023', 'x101'): 0, ('x023', 'x102'): 0, ('x023', 'x103'): 2000, ('x023', 'x110'): 0, ('x023', 'x112'): 0, ('x023', 'x121'): 0, ('x023', 'x123'): 2000, ('x023', 'x130'): 0, ('x030', 'x101'): 0, ('x030', 'x102'): 0, ('x030', 'x103'): 0, ('x030', 'x110'): 0, ('x030', 'x112'): 0, ('x030', 'x121'): 0, ('x030', 'x123'): 0, ('x030', 'x130'): 0, ('x001', 'x201'): 2000, ('x001', 'x202'): 0, ('x001', 'x203'): 0, ('x001', 'x210'): 0, ('x001', 'x212'): 0, ('x001', 'x221'): 2000, ('x001', 'x223'): 0, ('x001', 'x230'): 0, ('x002', 'x201'): 0, ('x002', 'x202'): 2000, ('x002', 'x203'): 0, ('x002', 'x210'): 0, ('x002', 'x212'): 2000, ('x002', 'x221'): 0, ('x002', 'x223'): 0, ('x002', 'x230'): 0, ('x003', 'x201'): 0, ('x003', 'x202'): 0, ('x003', 'x203'): 2000, ('x003', 'x210'): 0, ('x003', 'x212'): 0, ('x003', 'x221'): 0, ('x003', 'x223'): 2000, ('x003', 'x230'): 0, ('x010', 'x201'): 0, ('x010', 'x202'): 0, ('x010', 'x203'): 0, ('x010', 'x210'): 0, ('x010', 'x212'): 0, ('x010', 'x221'): 0, ('x010', 'x223'): 0, ('x010', 'x230'): 0, ('x012', 'x201'): 0, ('x012', 'x202'): 2000, ('x012', 'x203'): 0, ('x012', 'x210'): 0, ('x012', 'x212'): 2000, ('x012', 'x221'): 0, ('x012', 'x223'): 0, ('x012', 'x230'): 0, ('x021', 'x201'): 2000, ('x021', 'x202'): 0, ('x021', 'x203'): 0, ('x021', 'x210'): 0, ('x021', 'x212'): 0, ('x021', 'x221'): 2000, ('x021', 'x223'): 0, ('x021', 'x230'): 0, ('x023', 'x201'): 0, ('x023', 'x202'): 0, ('x023', 'x203'): 2000, ('x023', 'x210'): 0, ('x023', 'x212'): 0, ('x023', 'x221'): 0, ('x023', 'x223'): 2000, ('x023', 'x230'): 0, ('x030', 'x201'): 0, ('x030', 'x202'): 0, ('x030', 'x203'): 0, ('x030', 'x210'): 0, ('x030', 'x212'): 0, ('x030', 'x221'): 0, ('x030', 'x223'): 0, ('x030', 'x230'): 0, ('x101', 'x001'): 2000, ('x101', 'x002'): 0, ('x101', 'x003'): 0, ('x101', 'x010'): 0, ('x101', 'x012'): 0, ('x101', 'x021'): 2000, ('x101', 'x023'): 0, ('x101', 'x030'): 0, ('x102', 'x001'): 0, ('x102', 'x002'): 2000, ('x102', 'x003'): 0, ('x102', 'x010'): 0, ('x102', 'x012'): 2000, ('x102', 'x021'): 0, ('x102', 'x023'): 0, ('x102', 'x030'): 0, ('x103', 'x001'): 0, ('x103', 'x002'): 0, ('x103', 'x003'): 2000, ('x103', 'x010'): 0, ('x103', 'x012'): 0, ('x103', 'x021'): 0, ('x103', 'x023'): 2000, ('x103', 'x030'): 0, ('x110', 'x001'): 0, ('x110', 'x002'): 0, ('x110', 'x003'): 0, ('x110', 'x010'): 0, ('x110', 'x012'): 0, ('x110', 'x021'): 0, ('x110', 'x023'): 0, ('x110', 'x030'): 0, ('x112', 'x001'): 0, ('x112', 'x002'): 2000, ('x112', 'x003'): 0, ('x112', 'x010'): 0, ('x112', 'x012'): 2000, ('x112', 'x021'): 0, ('x112', 'x023'): 0, ('x112', 'x030'): 0, ('x121', 'x001'): 2000, ('x121', 'x002'): 0, ('x121', 'x003'): 0, ('x121', 'x010'): 0, ('x121', 'x012'): 0, ('x121', 'x021'): 2000, ('x121', 'x023'): 0, ('x121', 'x030'): 0, ('x123', 'x001'): 0, ('x123', 'x002'): 0, ('x123', 'x003'): 2000, ('x123', 'x010'): 0, ('x123', 'x012'): 0, ('x123', 'x021'): 0, ('x123', 'x023'): 2000, ('x123', 'x030'): 0, ('x130', 'x001'): 0, ('x130', 'x002'): 0, ('x130', 'x003'): 0, ('x130', 'x010'): 0, ('x130', 'x012'): 0, ('x130', 'x021'): 0, ('x130', 'x023'): 0, ('x130', 'x030'): 0, ('x101', 'x101'): -1970, ('x101', 'x102'): 4000, ('x101', 'x103'): 4000, ('x101', 'x110'): -2000, ('x101', 'x112'): -2000, ('x101', 'x121'): 6000, ('x101', 'x123'): 0, ('x101', 'x130'): 0, ('x102', 'x101'): 4000, ('x102', 'x102'): -1960, ('x102', 'x103'): 4000, ('x102', 'x110'): 0, ('x102', 'x112'): 6000, ('x102', 'x121'): -2000, ('x102', 'x123'): -2000, ('x102', 'x130'): 0, ('x103', 'x101'): 4000, ('x103', 'x102'): 4000, ('x103', 'x103'): -1990, ('x103', 'x110'): 0, ('x103', 'x112'): 0, ('x103', 'x121'): 0, ('x103', 'x123'): 6000, ('x103', 'x130'): -2000, ('x110', 'x101'): -2000, ('x110', 'x102'): -2000, ('x110', 'x103'): -2000, ('x110', 'x110'): 2060, ('x110', 'x112'): 2000, ('x110', 'x121'): 0, ('x110', 'x123'): 0, ('x110', 'x130'): 2000, ('x112', 'x101'): 0, ('x112', 'x102'): 6000, ('x112', 'x103'): 0, ('x112', 'x110'): 2000, ('x112', 'x112'): -970, ('x112', 'x121'): -2000, ('x112', 'x123'): -2000, ('x112', 'x130'): 0, ('x121', 'x101'): 6000, ('x121', 'x102'): 0, ('x121', 'x103'): 0, ('x121', 'x110'): -2000, ('x121', 'x112'): -2000, ('x121', 'x121'): -976, ('x121', 'x123'): 2000, ('x121', 'x130'): 0, ('x123', 'x101'): 0, ('x123', 'x102'): 0, ('x123', 'x103'): 6000, ('x123', 'x110'): 0, ('x123', 'x112'): 0, ('x123', 'x121'): 2000, ('x123', 'x123'): -970, ('x123', 'x130'): -2000, ('x130', 'x101'): -2000, ('x130', 'x102'): -2000, ('x130', 'x103'): -2000, ('x130', 'x110'): 2000, ('x130', 'x112'): 0, ('x130', 'x121'): 0, ('x130', 'x123'): 0, ('x130', 'x130'): 2010, ('x101', 'x201'): 2000, ('x101', 'x202'): 0, ('x101', 'x203'): 0, ('x101', 'x210'): 0, ('x101', 'x212'): 0, ('x101', 'x221'): 2000, ('x101', 'x223'): 0, ('x101', 'x230'): 0, ('x102', 'x201'): 0, ('x102', 'x202'): 2000, ('x102', 'x203'): 0, ('x102', 'x210'): 0, ('x102', 'x212'): 2000, ('x102', 'x221'): 0, ('x102', 'x223'): 0, ('x102', 'x230'): 0, ('x103', 'x201'): 0, ('x103', 'x202'): 0, ('x103', 'x203'): 2000, ('x103', 'x210'): 0, ('x103', 'x212'): 0, ('x103', 'x221'): 0, ('x103', 'x223'): 2000, ('x103', 'x230'): 0, ('x110', 'x201'): 0, ('x110', 'x202'): 0, ('x110', 'x203'): 0, ('x110', 'x210'): 0, ('x110', 'x212'): 0, ('x110', 'x221'): 0, ('x110', 'x223'): 0, ('x110', 'x230'): 0, ('x112', 'x201'): 0, ('x112', 'x202'): 2000, ('x112', 'x203'): 0, ('x112', 'x210'): 0, ('x112', 'x212'): 2000, ('x112', 'x221'): 0, ('x112', 'x223'): 0, ('x112', 'x230'): 0, ('x121', 'x201'): 2000, ('x121', 'x202'): 0, ('x121', 'x203'): 0, ('x121', 'x210'): 0, ('x121', 'x212'): 0, ('x121', 'x221'): 2000, ('x121', 'x223'): 0, ('x121', 'x230'): 0, ('x123', 'x201'): 0, ('x123', 'x202'): 0, ('x123', 'x203'): 2000, ('x123', 'x210'): 0, ('x123', 'x212'): 0, ('x123', 'x221'): 0, ('x123', 'x223'): 2000, ('x123', 'x230'): 0, ('x130', 'x201'): 0, ('x130', 'x202'): 0, ('x130', 'x203'): 0, ('x130', 'x210'): 0, ('x130', 'x212'): 0, ('x130', 'x221'): 0, ('x130', 'x223'): 0, ('x130', 'x230'): 0, ('x201', 'x001'): 2000, ('x201', 'x002'): 0, ('x201', 'x003'): 0, ('x201', 'x010'): 0, ('x201', 'x012'): 0, ('x201', 'x021'): 2000, ('x201', 'x023'): 0, ('x201', 'x030'): 0, ('x202', 'x001'): 0, ('x202', 'x002'): 2000, ('x202', 'x003'): 0, ('x202', 'x010'): 0, ('x202', 'x012'): 2000, ('x202', 'x021'): 0, ('x202', 'x023'): 0, ('x202', 'x030'): 0, ('x203', 'x001'): 0, ('x203', 'x002'): 0, ('x203', 'x003'): 2000, ('x203', 'x010'): 0, ('x203', 'x012'): 0, ('x203', 'x021'): 0, ('x203', 'x023'): 2000, ('x203', 'x030'): 0, ('x210', 'x001'): 0, ('x210', 'x002'): 0, ('x210', 'x003'): 0, ('x210', 'x010'): 0, ('x210', 'x012'): 0, ('x210', 'x021'): 0, ('x210', 'x023'): 0, ('x210', 'x030'): 0, ('x212', 'x001'): 0, ('x212', 'x002'): 2000, ('x212', 'x003'): 0, ('x212', 'x010'): 0, ('x212', 'x012'): 2000, ('x212', 'x021'): 0, ('x212', 'x023'): 0, ('x212', 'x030'): 0, ('x221', 'x001'): 2000, ('x221', 'x002'): 0, ('x221', 'x003'): 0, ('x221', 'x010'): 0, ('x221', 'x012'): 0, ('x221', 'x021'): 2000, ('x221', 'x023'): 0, ('x221', 'x030'): 0, ('x223', 'x001'): 0, ('x223', 'x002'): 0, ('x223', 'x003'): 2000, ('x223', 'x010'): 0, ('x223', 'x012'): 0, ('x223', 'x021'): 0, ('x223', 'x023'): 2000, ('x223', 'x030'): 0, ('x230', 'x001'): 0, ('x230', 'x002'): 0, ('x230', 'x003'): 0, ('x230', 'x010'): 0, ('x230', 'x012'): 0, ('x230', 'x021'): 0, ('x230', 'x023'): 0, ('x230', 'x030'): 0, ('x201', 'x101'): 2000, ('x201', 'x102'): 0, ('x201', 'x103'): 0, ('x201', 'x110'): 0, ('x201', 'x112'): 0, ('x201', 'x121'): 2000, ('x201', 'x123'): 0, ('x201', 'x130'): 0, ('x202', 'x101'): 0, ('x202', 'x102'): 2000, ('x202', 'x103'): 0, ('x202', 'x110'): 0, ('x202', 'x112'): 2000, ('x202', 'x121'): 0, ('x202', 'x123'): 0, ('x202', 'x130'): 0, ('x203', 'x101'): 0, ('x203', 'x102'): 0, ('x203', 'x103'): 2000, ('x203', 'x110'): 0, ('x203', 'x112'): 0, ('x203', 'x121'): 0, ('x203', 'x123'): 2000, ('x203', 'x130'): 0, ('x210', 'x101'): 0, ('x210', 'x102'): 0, ('x210', 'x103'): 0, ('x210', 'x110'): 0, ('x210', 'x112'): 0, ('x210', 'x121'): 0, ('x210', 'x123'): 0, ('x210', 'x130'): 0, ('x212', 'x101'): 0, ('x212', 'x102'): 2000, ('x212', 'x103'): 0, ('x212', 'x110'): 0, ('x212', 'x112'): 2000, ('x212', 'x121'): 0, ('x212', 'x123'): 0, ('x212', 'x130'): 0, ('x221', 'x101'): 2000, ('x221', 'x102'): 0, ('x221', 'x103'): 0, ('x221', 'x110'): 0, ('x221', 'x112'): 0, ('x221', 'x121'): 2000, ('x221', 'x123'): 0, ('x221', 'x130'): 0, ('x223', 'x101'): 0, ('x223', 'x102'): 0, ('x223', 'x103'): 2000, ('x223', 'x110'): 0, ('x223', 'x112'): 0, ('x223', 'x121'): 0, ('x223', 'x123'): 2000, ('x223', 'x130'): 0, ('x230', 'x101'): 0, ('x230', 'x102'): 0, ('x230', 'x103'): 0, ('x230', 'x110'): 0, ('x230', 'x112'): 0, ('x230', 'x121'): 0, ('x230', 'x123'): 0, ('x230', 'x130'): 0, ('x201', 'x201'): -1970, ('x201', 'x202'): 4000, ('x201', 'x203'): 4000, ('x201', 'x210'): -2000, ('x201', 'x212'): -2000, ('x201', 'x221'): 6000, ('x201', 'x223'): 0, ('x201', 'x230'): 0, ('x202', 'x201'): 4000, ('x202', 'x202'): -1960, ('x202', 'x203'): 4000, ('x202', 'x210'): 0, ('x202', 'x212'): 6000, ('x202', 'x221'): -2000, ('x202', 'x223'): -2000, ('x202', 'x230'): 0, ('x203', 'x201'): 4000, ('x203', 'x202'): 4000, ('x203', 'x203'): -1990, ('x203', 'x210'): 0, ('x203', 'x212'): 0, ('x203', 'x221'): 0, ('x203', 'x223'): 6000, ('x203', 'x230'): -2000, ('x210', 'x201'): -2000, ('x210', 'x202'): -2000, ('x210', 'x203'): -2000, ('x210', 'x210'): 2060, ('x210', 'x212'): 2000, ('x210', 'x221'): 0, ('x210', 'x223'): 0, ('x210', 'x230'): 2000, ('x212', 'x201'): 0, ('x212', 'x202'): 6000, ('x212', 'x203'): 0, ('x212', 'x210'): 2000, ('x212', 'x212'): -970, ('x212', 'x221'): -2000, ('x212', 'x223'): -2000, ('x212', 'x230'): 0, ('x221', 'x201'): 6000, ('x221', 'x202'): 0, ('x221', 'x203'): 0, ('x221', 'x210'): -2000, ('x221', 'x212'): -2000, ('x221', 'x221'): -976, ('x221', 'x223'): 2000, ('x221', 'x230'): 0, ('x223', 'x201'): 0, ('x223', 'x202'): 0, ('x223', 'x203'): 6000, ('x223', 'x210'): 0, ('x223', 'x212'): 0, ('x223', 'x221'): 2000, ('x223', 'x223'): -970, ('x223', 'x230'): -2000, ('x230', 'x201'): -2000, ('x230', 'x202'): -2000, ('x230', 'x203'): -2000, ('x230', 'x210'): 2000, ('x230', 'x212'): 0, ('x230', 'x221'): 0, ('x230', 'x223'): 0, ('x230', 'x230'): 2010}
Q_Dict_Track = {('x001', 'x001'): '+0+30-1000 (outgoing edge(0) linear terms)+1000 (constraint-3 outgoing edge(0) linear terms)+1000 (constraint-3 incoming edge(1) linear terms)-3000 (constraint-4 incoming edge(1) linear terms for all vehicles)', ('x001', 'x002'): '+0+2000 (outgoing edge(0) all combination)+2000 (constraint-3 outgoing edge(0) all combination)', ('x001', 'x003'): '+0+2000 (outgoing edge(0) all combination)+2000 (constraint-3 outgoing edge(0) all combination)', ('x001', 'x010'): '+0-2000 (constraint-3 one incoming and one outgoing edge(1) all combination)', ('x001', 'x012'): '+0-2000 (constraint-3 one incoming and one outgoing edge(1) all combination)', ('x001', 'x021'): '+0+2000 (constraint-2 incoming edge(1) all combination)+2000 (constraint-3 incoming edge(1) all combination)+2000 (constraint-4 incoming edge(1) all combination terms for all vehicles)', ('x001', 'x023'): '+0', ('x001', 'x030'): '+0', ('x002', 'x001'): '+0+2000 (outgoing edge(0) all combination)+2000 (constraint-3 outgoing edge(0) all combination)', ('x002', 'x002'): '+0+40-1000 (outgoing edge(0) linear terms)+1000 (constraint-3 outgoing edge(0) linear terms)+1000 (constraint-3 incoming edge(2) linear terms)-3000 (constraint-4 incoming edge(2) linear terms for all vehicles)', ('x002', 'x003'): '+0+2000 (outgoing edge(0) all combination)+2000 (constraint-3 outgoing edge(0) all combination)', ('x002', 'x010'): '+0', ('x002', 'x012'): '+0+2000 (constraint-2 incoming edge(2) all combination)+2000 (constraint-3 incoming edge(2) all combination)+2000 (constraint-4 incoming edge(2) all combination terms for all vehicles)', ('x002', 'x021'): '+0-2000 (constraint-3 one incoming and one outgoing edge(2) all combination)', ('x002', 'x023'): '+0-2000 (constraint-3 one incoming and one outgoing edge(2) all combination)', ('x002', 'x030'): '+0', ('x003', 'x001'): '+0+2000 (outgoing edge(0) all combination)+2000 (constraint-3 outgoing edge(0) all combination)', ('x003', 'x002'): '+0+2000 (outgoing edge(0) all combination)+2000 (constraint-3 outgoing edge(0) all combination)', ('x003', 'x003'): '+0+10-1000 (outgoing edge(0) linear terms)+1000 (constraint-3 outgoing edge(0) linear terms)+1000 (constraint-3 incoming edge(3) linear terms)-3000 (constraint-4 incoming edge(3) linear terms for all vehicles)', ('x003', 'x010'): '+0', ('x003', 'x012'): '+0', ('x003', 'x021'): '+0', ('x003', 'x023'): '+0+2000 (constraint-2 incoming edge(3) all combination)+2000 (constraint-3 incoming edge(3) all combination)+2000 (constraint-4 incoming edge(3) all combination terms for all vehicles)', ('x003', 'x030'): '+0-2000 (constraint-3 one incoming and one outgoing edge(3) all combination)', ('x010', 'x001'): '+0-2000 (constraint-3 one incoming and one outgoing edge(0) all combination)', ('x010', 'x002'): '+0-2000 (constraint-3 one incoming and one outgoing edge(0) all combination)', ('x010', 'x003'): '+0-2000 (constraint-3 one incoming and one outgoing edge(0) all combination)', ('x010', 'x010'): '+0+60+1000 (constraint-3 incoming edge(0) linear terms)+1000 (constraint-3 outgoing edge(1) linear terms)', ('x010', 'x012'): '+0+2000 (constraint-3 outgoing edge(1) all combination)', ('x010', 'x021'): '+0', ('x010', 'x023'): '+0', ('x010', 'x030'): '+0+2000 (constraint-3 incoming edge(0) all combination)', ('x012', 'x001'): '+0', ('x012', 'x002'): '+0+2000 (constraint-2 incoming edge(2) all combination)+2000 (constraint-3 incoming edge(2) all combination)+2000 (constraint-4 incoming edge(2) all combination terms for all vehicles)', ('x012', 'x003'): '+0', ('x012', 'x010'): '+0+2000 (constraint-3 outgoing edge(1) all combination)', ('x012', 'x012'): '+0+30+1000 (constraint-3 outgoing edge(1) linear terms)+1000 (constraint-3 incoming edge(2) linear terms)-3000 (constraint-4 incoming edge(2) linear terms for all vehicles)', ('x012', 'x021'): '+0-2000 (constraint-3 one incoming and one outgoing edge(2) all combination)', ('x012', 'x023'): '+0-2000 (constraint-3 one incoming and one outgoing edge(2) all combination)', ('x012', 'x030'): '+0', ('x021', 'x001'): '+0+2000 (constraint-2 incoming edge(1) all combination)+2000 (constraint-3 incoming edge(1) all combination)+2000 (constraint-4 incoming edge(1) all combination terms for all vehicles)', ('x021', 'x002'): '+0', ('x021', 'x003'): '+0', ('x021', 'x010'): '+0-2000 (constraint-3 one incoming and one outgoing edge(1) all combination)', ('x021', 'x012'): '+0-2000 (constraint-3 one incoming and one outgoing edge(1) all combination)', ('x021', 'x021'): '+0+24+1000 (constraint-3 incoming edge(1) linear terms)+1000 (constraint-3 outgoing edge(2) linear terms)-3000 (constraint-4 incoming edge(1) linear terms for all vehicles)', ('x021', 'x023'): '+0+2000 (constraint-3 outgoing edge(2) all combination)', ('x021', 'x030'): '+0', ('x023', 'x001'): '+0', ('x023', 'x002'): '+0', ('x023', 'x003'): '+0+2000 (constraint-2 incoming edge(3) all combination)+2000 (constraint-3 incoming edge(3) all combination)+2000 (constraint-4 incoming edge(3) all combination terms for all vehicles)', ('x023', 'x010'): '+0', ('x023', 'x012'): '+0', ('x023', 'x021'): '+0+2000 (constraint-3 outgoing edge(2) all combination)', ('x023', 'x023'): '+0+30+1000 (constraint-3 outgoing edge(2) linear terms)+1000 (constraint-3 incoming edge(3) linear terms)-3000 (constraint-4 incoming edge(3) linear terms for all vehicles)', ('x023', 'x030'): '+0-2000 (constraint-3 one incoming and one outgoing edge(3) all combination)', ('x030', 'x001'): '+0-2000 (constraint-3 one incoming and one outgoing edge(0) all combination)', ('x030', 'x002'): '+0-2000 (constraint-3 one incoming and one outgoing edge(0) all combination)', ('x030', 'x003'): '+0-2000 (constraint-3 one incoming and one outgoing edge(0) all combination)', ('x030', 'x010'): '+0+2000 (constraint-3 incoming edge(0) all combination)', ('x030', 'x012'): '+0', ('x030', 'x021'): '+0', ('x030', 'x023'): '+0', ('x030', 'x030'): '+0+10+1000 (constraint-3 incoming edge(0) linear terms)+1000 (constraint-3 outgoing edge(3) linear terms)', ('x001', 'x101'): '+0+2000 (constraint-4 incoming edge(1) all combination terms for all vehicles)', ('x001', 'x102'): '+0', ('x001', 'x103'): '+0', ('x001', 'x110'): '+0', ('x001', 'x112'): '+0', ('x001', 'x121'): '+0+2000 (constraint-4 incoming edge(1) all combination terms for all vehicles)', ('x001', 'x123'): '+0', ('x001', 'x130'): '+0', ('x002', 'x101'): '+0', ('x002', 'x102'): '+0+2000 (constraint-4 incoming edge(2) all combination terms for all vehicles)', ('x002', 'x103'): '+0', ('x002', 'x110'): '+0', ('x002', 'x112'): '+0+2000 (constraint-4 incoming edge(2) all combination terms for all vehicles)', ('x002', 'x121'): '+0', ('x002', 'x123'): '+0', ('x002', 'x130'): '+0', ('x003', 'x101'): '+0', ('x003', 'x102'): '+0', ('x003', 'x103'): '+0+2000 (constraint-4 incoming edge(3) all combination terms for all vehicles)', ('x003', 'x110'): '+0', ('x003', 'x112'): '+0', ('x003', 'x121'): '+0', ('x003', 'x123'): '+0+2000 (constraint-4 incoming edge(3) all combination terms for all vehicles)', ('x003', 'x130'): '+0', ('x010', 'x101'): '+0', ('x010', 'x102'): '+0', ('x010', 'x103'): '+0', ('x010', 'x110'): '+0', ('x010', 'x112'): '+0', ('x010', 'x121'): '+0', ('x010', 'x123'): '+0', ('x010', 'x130'): '+0', ('x012', 'x101'): '+0', ('x012', 'x102'): '+0+2000 (constraint-4 incoming edge(2) all combination terms for all vehicles)', ('x012', 'x103'): '+0', ('x012', 'x110'): '+0', ('x012', 'x112'): '+0+2000 (constraint-4 incoming edge(2) all combination terms for all vehicles)', ('x012', 'x121'): '+0', ('x012', 'x123'): '+0', ('x012', 'x130'): '+0', ('x021', 'x101'): '+0+2000 (constraint-4 incoming edge(1) all combination terms for all vehicles)', ('x021', 'x102'): '+0', ('x021', 'x103'): '+0', ('x021', 'x110'): '+0', ('x021', 'x112'): '+0', ('x021', 'x121'): '+0+2000 (constraint-4 incoming edge(1) all combination terms for all vehicles)', ('x021', 'x123'): '+0', ('x021', 'x130'): '+0', ('x023', 'x101'): '+0', ('x023', 'x102'): '+0', ('x023', 'x103'): '+0+2000 (constraint-4 incoming edge(3) all combination terms for all vehicles)', ('x023', 'x110'): '+0', ('x023', 'x112'): '+0', ('x023', 'x121'): '+0', ('x023', 'x123'): '+0+2000 (constraint-4 incoming edge(3) all combination terms for all vehicles)', ('x023', 'x130'): '+0', ('x030', 'x101'): '+0', ('x030', 'x102'): '+0', ('x030', 'x103'): '+0', ('x030', 'x110'): '+0', ('x030', 'x112'): '+0', ('x030', 'x121'): '+0', ('x030', 'x123'): '+0', ('x030', 'x130'): '+0', ('x001', 'x201'): '+0+2000 (constraint-4 incoming edge(1) all combination terms for all vehicles)', ('x001', 'x202'): '+0', ('x001', 'x203'): '+0', ('x001', 'x210'): '+0', ('x001', 'x212'): '+0', ('x001', 'x221'): '+0+2000 (constraint-4 incoming edge(1) all combination terms for all vehicles)', ('x001', 'x223'): '+0', ('x001', 'x230'): '+0', ('x002', 'x201'): '+0', ('x002', 'x202'): '+0+2000 (constraint-4 incoming edge(2) all combination terms for all vehicles)', ('x002', 'x203'): '+0', ('x002', 'x210'): '+0', ('x002', 'x212'): '+0+2000 (constraint-4 incoming edge(2) all combination terms for all vehicles)', ('x002', 'x221'): '+0', ('x002', 'x223'): '+0', ('x002', 'x230'): '+0', ('x003', 'x201'): '+0', ('x003', 'x202'): '+0', ('x003', 'x203'): '+0+2000 (constraint-4 incoming edge(3) all combination terms for all vehicles)', ('x003', 'x210'): '+0', ('x003', 'x212'): '+0', ('x003', 'x221'): '+0', ('x003', 'x223'): '+0+2000 (constraint-4 incoming edge(3) all combination terms for all vehicles)', ('x003', 'x230'): '+0', ('x010', 'x201'): '+0', ('x010', 'x202'): '+0', ('x010', 'x203'): '+0', ('x010', 'x210'): '+0', ('x010', 'x212'): '+0', ('x010', 'x221'): '+0', ('x010', 'x223'): '+0', ('x010', 'x230'): '+0', ('x012', 'x201'): '+0', ('x012', 'x202'): '+0+2000 (constraint-4 incoming edge(2) all combination terms for all vehicles)', ('x012', 'x203'): '+0', ('x012', 'x210'): '+0', ('x012', 'x212'): '+0+2000 (constraint-4 incoming edge(2) all combination terms for all vehicles)', ('x012', 'x221'): '+0', ('x012', 'x223'): '+0', ('x012', 'x230'): '+0', ('x021', 'x201'): '+0+2000 (constraint-4 incoming edge(1) all combination terms for all vehicles)', ('x021', 'x202'): '+0', ('x021', 'x203'): '+0', ('x021', 'x210'): '+0', ('x021', 'x212'): '+0', ('x021', 'x221'): '+0+2000 (constraint-4 incoming edge(1) all combination terms for all vehicles)', ('x021', 'x223'): '+0', ('x021', 'x230'): '+0', ('x023', 'x201'): '+0', ('x023', 'x202'): '+0', ('x023', 'x203'): '+0+2000 (constraint-4 incoming edge(3) all combination terms for all vehicles)', ('x023', 'x210'): '+0', ('x023', 'x212'): '+0', ('x023', 'x221'): '+0', ('x023', 'x223'): '+0+2000 (constraint-4 incoming edge(3) all combination terms for all vehicles)', ('x023', 'x230'): '+0', ('x030', 'x201'): '+0', ('x030', 'x202'): '+0', ('x030', 'x203'): '+0', ('x030', 'x210'): '+0', ('x030', 'x212'): '+0', ('x030', 'x221'): '+0', ('x030', 'x223'): '+0', ('x030', 'x230'): '+0', ('x101', 'x001'): '+0+2000 (constraint-4 incoming edge(1) all combination terms for all vehicles)', ('x101', 'x002'): '+0', ('x101', 'x003'): '+0', ('x101', 'x010'): '+0', ('x101', 'x012'): '+0', ('x101', 'x021'): '+0+2000 (constraint-4 incoming edge(1) all combination terms for all vehicles)', ('x101', 'x023'): '+0', ('x101', 'x030'): '+0', ('x102', 'x001'): '+0', ('x102', 'x002'): '+0+2000 (constraint-4 incoming edge(2) all combination terms for all vehicles)', ('x102', 'x003'): '+0', ('x102', 'x010'): '+0', ('x102', 'x012'): '+0+2000 (constraint-4 incoming edge(2) all combination terms for all vehicles)', ('x102', 'x021'): '+0', ('x102', 'x023'): '+0', ('x102', 'x030'): '+0', ('x103', 'x001'): '+0', ('x103', 'x002'): '+0', ('x103', 'x003'): '+0+2000 (constraint-4 incoming edge(3) all combination terms for all vehicles)', ('x103', 'x010'): '+0', ('x103', 'x012'): '+0', ('x103', 'x021'): '+0', ('x103', 'x023'): '+0+2000 (constraint-4 incoming edge(3) all combination terms for all vehicles)', ('x103', 'x030'): '+0', ('x110', 'x001'): '+0', ('x110', 'x002'): '+0', ('x110', 'x003'): '+0', ('x110', 'x010'): '+0', ('x110', 'x012'): '+0', ('x110', 'x021'): '+0', ('x110', 'x023'): '+0', ('x110', 'x030'): '+0', ('x112', 'x001'): '+0', ('x112', 'x002'): '+0+2000 (constraint-4 incoming edge(2) all combination terms for all vehicles)', ('x112', 'x003'): '+0', ('x112', 'x010'): '+0', ('x112', 'x012'): '+0+2000 (constraint-4 incoming edge(2) all combination terms for all vehicles)', ('x112', 'x021'): '+0', ('x112', 'x023'): '+0', ('x112', 'x030'): '+0', ('x121', 'x001'): '+0+2000 (constraint-4 incoming edge(1) all combination terms for all vehicles)', ('x121', 'x002'): '+0', ('x121', 'x003'): '+0', ('x121', 'x010'): '+0', ('x121', 'x012'): '+0', ('x121', 'x021'): '+0+2000 (constraint-4 incoming edge(1) all combination terms for all vehicles)', ('x121', 'x023'): '+0', ('x121', 'x030'): '+0', ('x123', 'x001'): '+0', ('x123', 'x002'): '+0', ('x123', 'x003'): '+0+2000 (constraint-4 incoming edge(3) all combination terms for all vehicles)', ('x123', 'x010'): '+0', ('x123', 'x012'): '+0', ('x123', 'x021'): '+0', ('x123', 'x023'): '+0+2000 (constraint-4 incoming edge(3) all combination terms for all vehicles)', ('x123', 'x030'): '+0', ('x130', 'x001'): '+0', ('x130', 'x002'): '+0', ('x130', 'x003'): '+0', ('x130', 'x010'): '+0', ('x130', 'x012'): '+0', ('x130', 'x021'): '+0', ('x130', 'x023'): '+0', ('x130', 'x030'): '+0', ('x101', 'x101'): '+0+30-1000 (outgoing edge(0) linear terms)+1000 (constraint-3 outgoing edge(0) linear terms)+1000 (constraint-3 incoming edge(1) linear terms)-3000 (constraint-4 incoming edge(1) linear terms for all vehicles)', ('x101', 'x102'): '+0+2000 (outgoing edge(0) all combination)+2000 (constraint-3 outgoing edge(0) all combination)', ('x101', 'x103'): '+0+2000 (outgoing edge(0) all combination)+2000 (constraint-3 outgoing edge(0) all combination)', ('x101', 'x110'): '+0-2000 (constraint-3 one incoming and one outgoing edge(1) all combination)', ('x101', 'x112'): '+0-2000 (constraint-3 one incoming and one outgoing edge(1) all combination)', ('x101', 'x121'): '+0+2000 (constraint-2 incoming edge(1) all combination)+2000 (constraint-3 incoming edge(1) all combination)+2000 (constraint-4 incoming edge(1) all combination terms for all vehicles)', ('x101', 'x123'): '+0', ('x101', 'x130'): '+0', ('x102', 'x101'): '+0+2000 (outgoing edge(0) all combination)+2000 (constraint-3 outgoing edge(0) all combination)', ('x102', 'x102'): '+0+40-1000 (outgoing edge(0) linear terms)+1000 (constraint-3 outgoing edge(0) linear terms)+1000 (constraint-3 incoming edge(2) linear terms)-3000 (constraint-4 incoming edge(2) linear terms for all vehicles)', ('x102', 'x103'): '+0+2000 (outgoing edge(0) all combination)+2000 (constraint-3 outgoing edge(0) all combination)', ('x102', 'x110'): '+0', ('x102', 'x112'): '+0+2000 (constraint-2 incoming edge(2) all combination)+2000 (constraint-3 incoming edge(2) all combination)+2000 (constraint-4 incoming edge(2) all combination terms for all vehicles)', ('x102', 'x121'): '+0-2000 (constraint-3 one incoming and one outgoing edge(2) all combination)', ('x102', 'x123'): '+0-2000 (constraint-3 one incoming and one outgoing edge(2) all combination)', ('x102', 'x130'): '+0', ('x103', 'x101'): '+0+2000 (outgoing edge(0) all combination)+2000 (constraint-3 outgoing edge(0) all combination)', ('x103', 'x102'): '+0+2000 (outgoing edge(0) all combination)+2000 (constraint-3 outgoing edge(0) all combination)', ('x103', 'x103'): '+0+10-1000 (outgoing edge(0) linear terms)+1000 (constraint-3 outgoing edge(0) linear terms)+1000 (constraint-3 incoming edge(3) linear terms)-3000 (constraint-4 incoming edge(3) linear terms for all vehicles)', ('x103', 'x110'): '+0', ('x103', 'x112'): '+0', ('x103', 'x121'): '+0', ('x103', 'x123'): '+0+2000 (constraint-2 incoming edge(3) all combination)+2000 (constraint-3 incoming edge(3) all combination)+2000 (constraint-4 incoming edge(3) all combination terms for all vehicles)', ('x103', 'x130'): '+0-2000 (constraint-3 one incoming and one outgoing edge(3) all combination)', ('x110', 'x101'): '+0-2000 (constraint-3 one incoming and one outgoing edge(0) all combination)', ('x110', 'x102'): '+0-2000 (constraint-3 one incoming and one outgoing edge(0) all combination)', ('x110', 'x103'): '+0-2000 (constraint-3 one incoming and one outgoing edge(0) all combination)', ('x110', 'x110'): '+0+60+1000 (constraint-3 incoming edge(0) linear terms)+1000 (constraint-3 outgoing edge(1) linear terms)', ('x110', 'x112'): '+0+2000 (constraint-3 outgoing edge(1) all combination)', ('x110', 'x121'): '+0', ('x110', 'x123'): '+0', ('x110', 'x130'): '+0+2000 (constraint-3 incoming edge(0) all combination)', ('x112', 'x101'): '+0', ('x112', 'x102'): '+0+2000 (constraint-2 incoming edge(2) all combination)+2000 (constraint-3 incoming edge(2) all combination)+2000 (constraint-4 incoming edge(2) all combination terms for all vehicles)', ('x112', 'x103'): '+0', ('x112', 'x110'): '+0+2000 (constraint-3 outgoing edge(1) all combination)', ('x112', 'x112'): '+0+30+1000 (constraint-3 outgoing edge(1) linear terms)+1000 (constraint-3 incoming edge(2) linear terms)-3000 (constraint-4 incoming edge(2) linear terms for all vehicles)', ('x112', 'x121'): '+0-2000 (constraint-3 one incoming and one outgoing edge(2) all combination)', ('x112', 'x123'): '+0-2000 (constraint-3 one incoming and one outgoing edge(2) all combination)', ('x112', 'x130'): '+0', ('x121', 'x101'): '+0+2000 (constraint-2 incoming edge(1) all combination)+2000 (constraint-3 incoming edge(1) all combination)+2000 (constraint-4 incoming edge(1) all combination terms for all vehicles)', ('x121', 'x102'): '+0', ('x121', 'x103'): '+0', ('x121', 'x110'): '+0-2000 (constraint-3 one incoming and one outgoing edge(1) all combination)', ('x121', 'x112'): '+0-2000 (constraint-3 one incoming and one outgoing edge(1) all combination)', ('x121', 'x121'): '+0+24+1000 (constraint-3 incoming edge(1) linear terms)+1000 (constraint-3 outgoing edge(2) linear terms)-3000 (constraint-4 incoming edge(1) linear terms for all vehicles)', ('x121', 'x123'): '+0+2000 (constraint-3 outgoing edge(2) all combination)', ('x121', 'x130'): '+0', ('x123', 'x101'): '+0', ('x123', 'x102'): '+0', ('x123', 'x103'): '+0+2000 (constraint-2 incoming edge(3) all combination)+2000 (constraint-3 incoming edge(3) all combination)+2000 (constraint-4 incoming edge(3) all combination terms for all vehicles)', ('x123', 'x110'): '+0', ('x123', 'x112'): '+0', ('x123', 'x121'): '+0+2000 (constraint-3 outgoing edge(2) all combination)', ('x123', 'x123'): '+0+30+1000 (constraint-3 outgoing edge(2) linear terms)+1000 (constraint-3 incoming edge(3) linear terms)-3000 (constraint-4 incoming edge(3) linear terms for all vehicles)', ('x123', 'x130'): '+0-2000 (constraint-3 one incoming and one outgoing edge(3) all combination)', ('x130', 'x101'): '+0-2000 (constraint-3 one incoming and one outgoing edge(0) all combination)', ('x130', 'x102'): '+0-2000 (constraint-3 one incoming and one outgoing edge(0) all combination)', ('x130', 'x103'): '+0-2000 (constraint-3 one incoming and one outgoing edge(0) all combination)', ('x130', 'x110'): '+0+2000 (constraint-3 incoming edge(0) all combination)', ('x130', 'x112'): '+0', ('x130', 'x121'): '+0', ('x130', 'x123'): '+0', ('x130', 'x130'): '+0+10+1000 (constraint-3 incoming edge(0) linear terms)+1000 (constraint-3 outgoing edge(3) linear terms)', ('x101', 'x201'): '+0+2000 (constraint-4 incoming edge(1) all combination terms for all vehicles)', ('x101', 'x202'): '+0', ('x101', 'x203'): '+0', ('x101', 'x210'): '+0', ('x101', 'x212'): '+0', ('x101', 'x221'): '+0+2000 (constraint-4 incoming edge(1) all combination terms for all vehicles)', ('x101', 'x223'): '+0', ('x101', 'x230'): '+0', ('x102', 'x201'): '+0', ('x102', 'x202'): '+0+2000 (constraint-4 incoming edge(2) all combination terms for all vehicles)', ('x102', 'x203'): '+0', ('x102', 'x210'): '+0', ('x102', 'x212'): '+0+2000 (constraint-4 incoming edge(2) all combination terms for all vehicles)', ('x102', 'x221'): '+0', ('x102', 'x223'): '+0', ('x102', 'x230'): '+0', ('x103', 'x201'): '+0', ('x103', 'x202'): '+0', ('x103', 'x203'): '+0+2000 (constraint-4 incoming edge(3) all combination terms for all vehicles)', ('x103', 'x210'): '+0', ('x103', 'x212'): '+0', ('x103', 'x221'): '+0', ('x103', 'x223'): '+0+2000 (constraint-4 incoming edge(3) all combination terms for all vehicles)', ('x103', 'x230'): '+0', ('x110', 'x201'): '+0', ('x110', 'x202'): '+0', ('x110', 'x203'): '+0', ('x110', 'x210'): '+0', ('x110', 'x212'): '+0', ('x110', 'x221'): '+0', ('x110', 'x223'): '+0', ('x110', 'x230'): '+0', ('x112', 'x201'): '+0', ('x112', 'x202'): '+0+2000 (constraint-4 incoming edge(2) all combination terms for all vehicles)', ('x112', 'x203'): '+0', ('x112', 'x210'): '+0', ('x112', 'x212'): '+0+2000 (constraint-4 incoming edge(2) all combination terms for all vehicles)', ('x112', 'x221'): '+0', ('x112', 'x223'): '+0', ('x112', 'x230'): '+0', ('x121', 'x201'): '+0+2000 (constraint-4 incoming edge(1) all combination terms for all vehicles)', ('x121', 'x202'): '+0', ('x121', 'x203'): '+0', ('x121', 'x210'): '+0', ('x121', 'x212'): '+0', ('x121', 'x221'): '+0+2000 (constraint-4 incoming edge(1) all combination terms for all vehicles)', ('x121', 'x223'): '+0', ('x121', 'x230'): '+0', ('x123', 'x201'): '+0', ('x123', 'x202'): '+0', ('x123', 'x203'): '+0+2000 (constraint-4 incoming edge(3) all combination terms for all vehicles)', ('x123', 'x210'): '+0', ('x123', 'x212'): '+0', ('x123', 'x221'): '+0', ('x123', 'x223'): '+0+2000 (constraint-4 incoming edge(3) all combination terms for all vehicles)', ('x123', 'x230'): '+0', ('x130', 'x201'): '+0', ('x130', 'x202'): '+0', ('x130', 'x203'): '+0', ('x130', 'x210'): '+0', ('x130', 'x212'): '+0', ('x130', 'x221'): '+0', ('x130', 'x223'): '+0', ('x130', 'x230'): '+0', ('x201', 'x001'): '+0+2000 (constraint-4 incoming edge(1) all combination terms for all vehicles)', ('x201', 'x002'): '+0', ('x201', 'x003'): '+0', ('x201', 'x010'): '+0', ('x201', 'x012'): '+0', ('x201', 'x021'): '+0+2000 (constraint-4 incoming edge(1) all combination terms for all vehicles)', ('x201', 'x023'): '+0', ('x201', 'x030'): '+0', ('x202', 'x001'): '+0', ('x202', 'x002'): '+0+2000 (constraint-4 incoming edge(2) all combination terms for all vehicles)', ('x202', 'x003'): '+0', ('x202', 'x010'): '+0', ('x202', 'x012'): '+0+2000 (constraint-4 incoming edge(2) all combination terms for all vehicles)', ('x202', 'x021'): '+0', ('x202', 'x023'): '+0', ('x202', 'x030'): '+0', ('x203', 'x001'): '+0', ('x203', 'x002'): '+0', ('x203', 'x003'): '+0+2000 (constraint-4 incoming edge(3) all combination terms for all vehicles)', ('x203', 'x010'): '+0', ('x203', 'x012'): '+0', ('x203', 'x021'): '+0', ('x203', 'x023'): '+0+2000 (constraint-4 incoming edge(3) all combination terms for all vehicles)', ('x203', 'x030'): '+0', ('x210', 'x001'): '+0', ('x210', 'x002'): '+0', ('x210', 'x003'): '+0', ('x210', 'x010'): '+0', ('x210', 'x012'): '+0', ('x210', 'x021'): '+0', ('x210', 'x023'): '+0', ('x210', 'x030'): '+0', ('x212', 'x001'): '+0', ('x212', 'x002'): '+0+2000 (constraint-4 incoming edge(2) all combination terms for all vehicles)', ('x212', 'x003'): '+0', ('x212', 'x010'): '+0', ('x212', 'x012'): '+0+2000 (constraint-4 incoming edge(2) all combination terms for all vehicles)', ('x212', 'x021'): '+0', ('x212', 'x023'): '+0', ('x212', 'x030'): '+0', ('x221', 'x001'): '+0+2000 (constraint-4 incoming edge(1) all combination terms for all vehicles)', ('x221', 'x002'): '+0', ('x221', 'x003'): '+0', ('x221', 'x010'): '+0', ('x221', 'x012'): '+0', ('x221', 'x021'): '+0+2000 (constraint-4 incoming edge(1) all combination terms for all vehicles)', ('x221', 'x023'): '+0', ('x221', 'x030'): '+0', ('x223', 'x001'): '+0', ('x223', 'x002'): '+0', ('x223', 'x003'): '+0+2000 (constraint-4 incoming edge(3) all combination terms for all vehicles)', ('x223', 'x010'): '+0', ('x223', 'x012'): '+0', ('x223', 'x021'): '+0', ('x223', 'x023'): '+0+2000 (constraint-4 incoming edge(3) all combination terms for all vehicles)', ('x223', 'x030'): '+0', ('x230', 'x001'): '+0', ('x230', 'x002'): '+0', ('x230', 'x003'): '+0', ('x230', 'x010'): '+0', ('x230', 'x012'): '+0', ('x230', 'x021'): '+0', ('x230', 'x023'): '+0', ('x230', 'x030'): '+0', ('x201', 'x101'): '+0+2000 (constraint-4 incoming edge(1) all combination terms for all vehicles)', ('x201', 'x102'): '+0', ('x201', 'x103'): '+0', ('x201', 'x110'): '+0', ('x201', 'x112'): '+0', ('x201', 'x121'): '+0+2000 (constraint-4 incoming edge(1) all combination terms for all vehicles)', ('x201', 'x123'): '+0', ('x201', 'x130'): '+0', ('x202', 'x101'): '+0', ('x202', 'x102'): '+0+2000 (constraint-4 incoming edge(2) all combination terms for all vehicles)', ('x202', 'x103'): '+0', ('x202', 'x110'): '+0', ('x202', 'x112'): '+0+2000 (constraint-4 incoming edge(2) all combination terms for all vehicles)', ('x202', 'x121'): '+0', ('x202', 'x123'): '+0', ('x202', 'x130'): '+0', ('x203', 'x101'): '+0', ('x203', 'x102'): '+0', ('x203', 'x103'): '+0+2000 (constraint-4 incoming edge(3) all combination terms for all vehicles)', ('x203', 'x110'): '+0', ('x203', 'x112'): '+0', ('x203', 'x121'): '+0', ('x203', 'x123'): '+0+2000 (constraint-4 incoming edge(3) all combination terms for all vehicles)', ('x203', 'x130'): '+0', ('x210', 'x101'): '+0', ('x210', 'x102'): '+0', ('x210', 'x103'): '+0', ('x210', 'x110'): '+0', ('x210', 'x112'): '+0', ('x210', 'x121'): '+0', ('x210', 'x123'): '+0', ('x210', 'x130'): '+0', ('x212', 'x101'): '+0', ('x212', 'x102'): '+0+2000 (constraint-4 incoming edge(2) all combination terms for all vehicles)', ('x212', 'x103'): '+0', ('x212', 'x110'): '+0', ('x212', 'x112'): '+0+2000 (constraint-4 incoming edge(2) all combination terms for all vehicles)', ('x212', 'x121'): '+0', ('x212', 'x123'): '+0', ('x212', 'x130'): '+0', ('x221', 'x101'): '+0+2000 (constraint-4 incoming edge(1) all combination terms for all vehicles)', ('x221', 'x102'): '+0', ('x221', 'x103'): '+0', ('x221', 'x110'): '+0', ('x221', 'x112'): '+0', ('x221', 'x121'): '+0+2000 (constraint-4 incoming edge(1) all combination terms for all vehicles)', ('x221', 'x123'): '+0', ('x221', 'x130'): '+0', ('x223', 'x101'): '+0', ('x223', 'x102'): '+0', ('x223', 'x103'): '+0+2000 (constraint-4 incoming edge(3) all combination terms for all vehicles)', ('x223', 'x110'): '+0', ('x223', 'x112'): '+0', ('x223', 'x121'): '+0', ('x223', 'x123'): '+0+2000 (constraint-4 incoming edge(3) all combination terms for all vehicles)', ('x223', 'x130'): '+0', ('x230', 'x101'): '+0', ('x230', 'x102'): '+0', ('x230', 'x103'): '+0', ('x230', 'x110'): '+0', ('x230', 'x112'): '+0', ('x230', 'x121'): '+0', ('x230', 'x123'): '+0', ('x230', 'x130'): '+0', ('x201', 'x201'): '+0+30-1000 (outgoing edge(0) linear terms)+1000 (constraint-3 outgoing edge(0) linear terms)+1000 (constraint-3 incoming edge(1) linear terms)-3000 (constraint-4 incoming edge(1) linear terms for all vehicles)', ('x201', 'x202'): '+0+2000 (outgoing edge(0) all combination)+2000 (constraint-3 outgoing edge(0) all combination)', ('x201', 'x203'): '+0+2000 (outgoing edge(0) all combination)+2000 (constraint-3 outgoing edge(0) all combination)', ('x201', 'x210'): '+0-2000 (constraint-3 one incoming and one outgoing edge(1) all combination)', ('x201', 'x212'): '+0-2000 (constraint-3 one incoming and one outgoing edge(1) all combination)', ('x201', 'x221'): '+0+2000 (constraint-2 incoming edge(1) all combination)+2000 (constraint-3 incoming edge(1) all combination)+2000 (constraint-4 incoming edge(1) all combination terms for all vehicles)', ('x201', 'x223'): '+0', ('x201', 'x230'): '+0', ('x202', 'x201'): '+0+2000 (outgoing edge(0) all combination)+2000 (constraint-3 outgoing edge(0) all combination)', ('x202', 'x202'): '+0+40-1000 (outgoing edge(0) linear terms)+1000 (constraint-3 outgoing edge(0) linear terms)+1000 (constraint-3 incoming edge(2) linear terms)-3000 (constraint-4 incoming edge(2) linear terms for all vehicles)', ('x202', 'x203'): '+0+2000 (outgoing edge(0) all combination)+2000 (constraint-3 outgoing edge(0) all combination)', ('x202', 'x210'): '+0', ('x202', 'x212'): '+0+2000 (constraint-2 incoming edge(2) all combination)+2000 (constraint-3 incoming edge(2) all combination)+2000 (constraint-4 incoming edge(2) all combination terms for all vehicles)', ('x202', 'x221'): '+0-2000 (constraint-3 one incoming and one outgoing edge(2) all combination)', ('x202', 'x223'): '+0-2000 (constraint-3 one incoming and one outgoing edge(2) all combination)', ('x202', 'x230'): '+0', ('x203', 'x201'): '+0+2000 (outgoing edge(0) all combination)+2000 (constraint-3 outgoing edge(0) all combination)', ('x203', 'x202'): '+0+2000 (outgoing edge(0) all combination)+2000 (constraint-3 outgoing edge(0) all combination)', ('x203', 'x203'): '+0+10-1000 (outgoing edge(0) linear terms)+1000 (constraint-3 outgoing edge(0) linear terms)+1000 (constraint-3 incoming edge(3) linear terms)-3000 (constraint-4 incoming edge(3) linear terms for all vehicles)', ('x203', 'x210'): '+0', ('x203', 'x212'): '+0', ('x203', 'x221'): '+0', ('x203', 'x223'): '+0+2000 (constraint-2 incoming edge(3) all combination)+2000 (constraint-3 incoming edge(3) all combination)+2000 (constraint-4 incoming edge(3) all combination terms for all vehicles)', ('x203', 'x230'): '+0-2000 (constraint-3 one incoming and one outgoing edge(3) all combination)', ('x210', 'x201'): '+0-2000 (constraint-3 one incoming and one outgoing edge(0) all combination)', ('x210', 'x202'): '+0-2000 (constraint-3 one incoming and one outgoing edge(0) all combination)', ('x210', 'x203'): '+0-2000 (constraint-3 one incoming and one outgoing edge(0) all combination)', ('x210', 'x210'): '+0+60+1000 (constraint-3 incoming edge(0) linear terms)+1000 (constraint-3 outgoing edge(1) linear terms)', ('x210', 'x212'): '+0+2000 (constraint-3 outgoing edge(1) all combination)', ('x210', 'x221'): '+0', ('x210', 'x223'): '+0', ('x210', 'x230'): '+0+2000 (constraint-3 incoming edge(0) all combination)', ('x212', 'x201'): '+0', ('x212', 'x202'): '+0+2000 (constraint-2 incoming edge(2) all combination)+2000 (constraint-3 incoming edge(2) all combination)+2000 (constraint-4 incoming edge(2) all combination terms for all vehicles)', ('x212', 'x203'): '+0', ('x212', 'x210'): '+0+2000 (constraint-3 outgoing edge(1) all combination)', ('x212', 'x212'): '+0+30+1000 (constraint-3 outgoing edge(1) linear terms)+1000 (constraint-3 incoming edge(2) linear terms)-3000 (constraint-4 incoming edge(2) linear terms for all vehicles)', ('x212', 'x221'): '+0-2000 (constraint-3 one incoming and one outgoing edge(2) all combination)', ('x212', 'x223'): '+0-2000 (constraint-3 one incoming and one outgoing edge(2) all combination)', ('x212', 'x230'): '+0', ('x221', 'x201'): '+0+2000 (constraint-2 incoming edge(1) all combination)+2000 (constraint-3 incoming edge(1) all combination)+2000 (constraint-4 incoming edge(1) all combination terms for all vehicles)', ('x221', 'x202'): '+0', ('x221', 'x203'): '+0', ('x221', 'x210'): '+0-2000 (constraint-3 one incoming and one outgoing edge(1) all combination)', ('x221', 'x212'): '+0-2000 (constraint-3 one incoming and one outgoing edge(1) all combination)', ('x221', 'x221'): '+0+24+1000 (constraint-3 incoming edge(1) linear terms)+1000 (constraint-3 outgoing edge(2) linear terms)-3000 (constraint-4 incoming edge(1) linear terms for all vehicles)', ('x221', 'x223'): '+0+2000 (constraint-3 outgoing edge(2) all combination)', ('x221', 'x230'): '+0', ('x223', 'x201'): '+0', ('x223', 'x202'): '+0', ('x223', 'x203'): '+0+2000 (constraint-2 incoming edge(3) all combination)+2000 (constraint-3 incoming edge(3) all combination)+2000 (constraint-4 incoming edge(3) all combination terms for all vehicles)', ('x223', 'x210'): '+0', ('x223', 'x212'): '+0', ('x223', 'x221'): '+0+2000 (constraint-3 outgoing edge(2) all combination)', ('x223', 'x223'): '+0+30+1000 (constraint-3 outgoing edge(2) linear terms)+1000 (constraint-3 incoming edge(3) linear terms)-3000 (constraint-4 incoming edge(3) linear terms for all vehicles)', ('x223', 'x230'): '+0-2000 (constraint-3 one incoming and one outgoing edge(3) all combination)', ('x230', 'x201'): '+0-2000 (constraint-3 one incoming and one outgoing edge(0) all combination)', ('x230', 'x202'): '+0-2000 (constraint-3 one incoming and one outgoing edge(0) all combination)', ('x230', 'x203'): '+0-2000 (constraint-3 one incoming and one outgoing edge(0) all combination)', ('x230', 'x210'): '+0+2000 (constraint-3 incoming edge(0) all combination)', ('x230', 'x212'): '+0', ('x230', 'x221'): '+0', ('x230', 'x223'): '+0', ('x230', 'x230'): '+0+10+1000 (constraint-3 incoming edge(0) linear terms)+1000 (constraint-3 outgoing edge(3) linear terms)'}

def sol_explainer(sol, energy):
    print()
    print('------------------------------')
    print('Explanation for the solution: ')
    penalties, energy_computed = '', 0
    for key1, value1 in sol.items():
        for key2, value2 in sol.items():
            if value1 == 1 and value2 == 1 and Q_Dict[(key1, key2)] != 0:
                print(f'For {(key1, key2)} : {Q_Dict[(key1, key2)]} which is because of : {Q_Dict_Track[(key1, key2)]}')
                penalties += f'({Q_Dict[(key1, key2)]})+'
                energy_computed += Q_Dict[(key1, key2)]
    print()
    print(f'total_reported = {energy} , energy_computed = {energy_computed} because ', penalties)
    print('------------------------------')
    print()

sol_ideal = {'x001': 0, 'x002': 0, 'x003': 1, 'x010': 0, 'x012': 0, 'x021': 0, 'x023': 0, 'x030': 1, 'x101': 1, 'x102': 0, 'x103': 0, 'x110': 0, 'x112': 1, 'x121': 0, 'x123': 0, 'x130': 1, 'x201': 0, 'x202': 0, 'x203': 1, 'x210': 0, 'x212': 0, 'x221': 0, 'x223': 0, 'x230': 1} 
sol_explainer(sol_ideal, -8890.0)

sol_reported = {'x001': 0, 'x002': 0, 'x003': 0, 'x010': 0, 'x012': 0, 'x021': 0, 'x023': 0, 'x030': 0, 'x101': 0, 'x102': 1, 'x103': 0, 'x110': 1, 'x112': 0, 'x121': 1, 'x123': 0, 'x130': 0, 'x201': 0, 'x202': 0, 'x203': 1, 'x210': 0, 'x212': 0, 'x221': 0, 'x223': 0, 'x230': 1}
sol_explainer(sol_reported, -10856.0)

